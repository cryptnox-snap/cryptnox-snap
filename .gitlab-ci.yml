# Need to setup arm64 docker images.
# ubuntu:focal-20210827
# linux/arm64/v8

stages:
- build
- test

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  BUILD_FOLDER: build
  DOCKER_IMAGE: arm64v8/ubuntu:focal
cache: &global_cache
  key: ${CI_JOB_NAME}
  policy: pull-push
    #ubuntu:devel:
    #  stage: build
    #  before_script:
    #  - apt-get update -qq
    #  - apt-get install -y -qq libpcre2-8-0 libpcre2-dev python3 python3-dev
    #  script:
    #  - mkdir $BUILD_FOLDER
    #  - cmake -B$BUILD_FOLDER -H. $CMAKE_BUILD_OPTIONS
    #  - make VERBOSE=1 -C $BUILD_FOLDER
    #  only:
    #    refs:
    #    - master
    #    - tags
    #    - merge_requests
    #    - web
    #    - schedules

snap:build:
  variables:
    RELEASE_TYPE: edge
  image: arm64v8/ubuntu:focal
  stage: build
  script:
  - export LC_ALL=C.UTF-8
  - export LANG=C.UTF-8
  - export SNAP_ARCH=arm64
  - export SNAPCRAFT_BUILD_INFO=1
  - apt-get -y update
  - apt-get install -y git
  - SNAPCRAFT_SETUP_CORE=1 snapcraft --destructive-mode
    #- |
    #  if [ "$CI_COMMIT_REF_NAME" = "release" ]; then
    #    echo $SNAPCRAFT_LOGIN | base64 --decode --ignore-garbage > snapcraft.login
    #    snapcraft login --with snapcraft.login
    #    snapcraft push cryptnox*.snap --release edge
    #    snapcraft logout
    #  fi
    #  script:
  - echo $SNAPCRAFT_LOGIN | base64 -d > snapcraft.login && snapcraft login --with snapcraft.login
  - snapcraft push *.snap --release $RELEASE_TYPE
  - snapcraft logout && rm snapcraft.login
    #  rules:
    #  - if: '$CI_COMMIT_TAG'
    #    when: manual

  allow_failure: false
  artifacts:
    paths:
    - "./*.snap"
    expire_in: 10 days
  only:
    refs:
    - tags
    - merge_requests
    - web
    - schedules

# variables:
#   GIT_SUBMODULE_STRATEGY: recursive
# 
# variables:
#   CONTAINER_IMAGE: registry.gitlab.e.foundation:5000/e/tools/easy-installer
#   CONTAINER_TAG: stable
# 
# stages:
# - test
# - prepare
# - build
# - publish

  #build-docker:
  #  image: docker:19
  #  stage: prepare
  #  services:
  #  - docker:19-dind
  #  tags:
  #  - generic_privileged
  #  variables:
  #    DOCKER_DRIVER: overlay2
  #  script:
  #  - docker pull $CONTAINER_IMAGE:$CONTAINER_TAG || true
  #  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.e.foundation:5000
  #  - docker build --cache-from $CONTAINER_IMAGE:$CONTAINER_TAG -t $CONTAINER_IMAGE:$CONTAINER_TAG .
  #  - docker push $CONTAINER_IMAGE:$CONTAINER_TAG

  #build-ubuntu:
  #  image: registry.gitlab.e.foundation:5000/e/tools/easy-installer:stable
  #  stage: build
  #  variables:
  #    GIT_SUBMODULE_STRATEGY: recursive
  #  script:
  #    - snapcraft
  #    - ls
  #  artifacts:
  #    name: "easy-installer"
  #    paths:
  #      - easy-installer*.snap
  #
  #
  #publish-ubuntu:
  #  image: registry.gitlab.e.foundation:5000/e/tools/easy-installer:stable
  #  stage: publish
  #  variables:
  #    RELEASE_TYPE: beta
  #  script:
  #    - echo ${SNAPCRAFT_LOGIN_FILE} | base64 -d > snapcraft.login && snapcraft login --with snapcraft.login
  #    - snapcraft push *.snap --release $RELEASE_TYPE
  #    - snapcraft logout && rm snapcraft.login
  #  rules:
  #    - if: '$CI_COMMIT_TAG'
  #      when: manual
